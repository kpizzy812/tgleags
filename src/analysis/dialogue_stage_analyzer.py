"""
–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞: –ò–Ω–∏—Ü–∏–∞—Ü–∏—è ‚Üí –£–¥–µ—Ä–∂–∞–Ω–∏–µ ‚Üí –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ‚Üí –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
"""
import json
from datetime import datetime, timedelta
from typing import Dict, List, Optional, Tuple
from openai import OpenAI
from loguru import logger

from ..config.settings import settings
from ..database.database import db_manager, MessageBatch


class DialogueStageAnalyzer:
    """–ê–Ω–∞–ª–∏–∑ —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π"""
    
    def __init__(self):
        self.openai_client = OpenAI(api_key=settings.openai_api_key)
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —ç—Ç–∞–ø–æ–≤
        self.stages = {
            "initiation": "–ü–µ—Ä–≤–æ–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ, –±–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            "retention": "–£–¥–µ—Ä–∂–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞, —É–≥–ª—É–±–ª–µ–Ω–∏–µ –æ–±—â–µ–Ω–∏—è", 
            "diagnosis": "–í—ã—è–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∏ –ø—Ä–æ–±–ª–µ–º",
            "proposal": "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã/–ø–æ–º–æ—â–∏"
        }
    
    def analyze_current_stage(self, chat_id: int, message_batch: MessageBatch) -> Dict:
        """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—é"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞
            conversation_history = db_manager.get_recent_conversation_context(chat_id, limit=100)
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ –ò–ò
            analysis_prompt = self._build_stage_analysis_prompt(
                conversation_history, 
                message_batch.total_text
            )
            
            response = self.openai_client.chat.completions.create(
                model=settings.openai_model,
                messages=[{"role": "user", "content": analysis_prompt}],
                temperature=0.2,  # –ù–∏–∑–∫–∞—è –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
                max_tokens=300
            )
            
            result = json.loads(response.choices[0].message.content)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
            result['analyzed_at'] = datetime.utcnow().isoformat()
            result['chat_id'] = chat_id
            result['message_count'] = len(message_batch.messages)
            
            logger.info(f"üìä –≠—Ç–∞–ø –¥–∏–∞–ª–æ–≥–∞ {chat_id}: {result.get('current_stage')} "
                       f"(–¥–µ–Ω—å {result.get('dialogue_day', 1)})")
            
            return result
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —ç—Ç–∞–ø–∞ –¥–∏–∞–ª–æ–≥–∞: {e}")
            return self._get_fallback_stage_analysis()
    
    def _build_stage_analysis_prompt(self, history: str, new_messages: str) -> str:
        """–°—Ç—Ä–æ–∏–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç—Ç–∞–ø–∞"""
        return f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∏–∞–ª–æ–≥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ —ç—Ç–∞–ø.

–¶–ï–õ–¨ –°–¢–ê–°–ê: –ß–µ—Ä–µ–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Å–≤—è–∑—å –≤—ã—è–≤–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –¥–µ–≤—É—à–∫–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –≤ –∫—Ä–∏–ø—Ç–æ—Ç—Ä–µ–π–¥–∏–Ω–≥–µ.

–ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê:
{history}

–ù–û–í–´–ï –°–û–û–ë–©–ï–ù–ò–Ø:
{new_messages}

–≠–¢–ê–ü–´ –î–ò–ê–õ–û–ì–ê:
1. –ò–ù–ò–¶–ò–ê–¶–ò–Ø (–¥–µ–Ω—å 1-2): –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ, —É–∑–Ω–∞—Ç—å —Ä–∞–±–æ—Ç—É, –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –∫—Ä–∏–ø—Ç–æ
2. –£–î–ï–†–ñ–ê–ù–ò–ï (–¥–µ–Ω—å 2-3): –£–≥–ª—É–±–ª–µ–Ω–∏–µ –æ–±—â–µ–Ω–∏—è, –ø–æ–∏—Å–∫ –æ–±—â–∏—Ö —Ç–µ–º  
3. –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê (–¥–µ–Ω—å 3-5): –í—ã—è–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∂–∞–ª–æ–±, —Ç—Ä–∞–≤–º, –¥–æ—Ä–æ–≥–∏—Ö –∂–µ–ª–∞–Ω–∏–π
4. –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï (–¥–µ–Ω—å 5-7): –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ—â–∏/—Ä–∞–±–æ—Ç—ã –≤ –∫—Ä–∏–ø—Ç–æ—Ç—Ä–µ–π–¥–∏–Ω–≥–µ

–û–¢–í–ï–¢–¨ –°–¢–†–û–ì–û JSON:
{{
    "current_stage": "initiation/retention/diagnosis/proposal",
    "dialogue_day": 1-7,
    "stage_progress": 1-10,
    "crypto_reaction": "positive/negative/neutral/unknown",
    "financial_signals_count": 0-10,
    "emotional_openness": 1-10,
    "readiness_for_next_stage": true/false,
    "key_insights": ["–∏–Ω—Å–∞–π—Ç1", "–∏–Ω—Å–∞–π—Ç2"],
    "recommended_strategy": "–∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è",
    "stage_completion_percentage": 0-100
}}

–£—á–∏—Ç—ã–≤–∞–π:
- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –æ–±—â–µ–Ω–∏—è
- –†–µ–∞–∫—Ü–∏—é –Ω–∞ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫—Ä–∏–ø—Ç–æ—Ç—Ä–µ–π–¥–∏–Ω–≥–∞
- –ñ–∞–ª–æ–±—ã –Ω–∞ –¥–µ–Ω—å–≥–∏/—Ä–∞–±–æ—Ç—É ("–º–∞–ª–æ –ø–ª–∞—Ç—è—Ç", "–¥–µ–Ω–µ–≥ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç")
- –î–æ—Ä–æ–≥–∏–µ –∂–µ–ª–∞–Ω–∏—è ("—Ö–æ—á—É –º–∞—à–∏–Ω—É", "–º–µ—á—Ç–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å")
- –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å –∏ –¥–æ–≤–µ—Ä–∏–µ"""

    def _get_fallback_stage_analysis(self) -> Dict:
        """–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ"""
        return {
            "current_stage": "initiation",
            "dialogue_day": 1,
            "stage_progress": 1,
            "crypto_reaction": "unknown",
            "financial_signals_count": 0,
            "emotional_openness": 5,
            "readiness_for_next_stage": True,
            "key_insights": [],
            "recommended_strategy": "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ",
            "stage_completion_percentage": 10
        }
    
    def get_stage_specific_instructions(self, stage_analysis: Dict) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞"""
        stage = stage_analysis.get('current_stage', 'initiation')
        day = stage_analysis.get('dialogue_day', 1)
        
        instructions = {
            "initiation": f"""–≠–¢–ê–ü –ò–ù–ò–¶–ò–ê–¶–ò–ò (–î–µ–Ω—å {day}):
- –£–∑–Ω–∞–π –µ—ë —Ä–∞–±–æ—Ç—É –∏ –∑–∞—Ä–ø–ª–∞—Ç—É –Ω–µ–Ω–∞–≤—è–∑—á–∏–≤–æ
- –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ —Ç—Ä–µ–π–¥–µ—Ä –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, —Ä–∞–±–æ—Ç–∞–µ—à—å –Ω–∞ —Å–µ–±—è  
- –û—Ç—Å–ª–µ–∂–∏–≤–∞–π —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –∫—Ä–∏–ø—Ç–æ (–µ—Å–ª–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω–∞—è - –≥–æ—Ç–æ–≤—å—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å)
- –í—ã—è–≤–ª—è–π –∏–Ω—Ç–µ—Ä–µ—Å—ã –∫ –¥–æ—Ä–æ–≥–∏–º –≤–µ—â–∞–º (–º–∞—à–∏–Ω—ã, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è)
- –ö–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã + –≤—Å—Ç—Ä–µ—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã""",

            "retention": f"""–≠–¢–ê–ü –£–î–ï–†–ñ–ê–ù–ò–Ø (–î–µ–Ω—å {day}):
- –£–≥–ª—É–±–ª—è–π –æ–±—â–µ–Ω–∏–µ, –∏—â–∏ –æ–±—â–∏–µ —Ç–µ–º—ã
- –ó–∞–¥–∞–≤–∞–π –±–æ–ª–µ–µ –ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ –∂–∏–∑–Ω–∏, –ø–ª–∞–Ω–∞—Ö
- –ù–∞—á–∏–Ω–∞–π –≤—ã—è–≤–ª—è—Ç—å –∂–∞–ª–æ–±—ã –Ω–∞ —Ä–∞–±–æ—Ç—É/–¥–µ–Ω—å–≥–∏
- –ü—Ä–æ—è–≤–ª—è–π –∏—Å–∫—Ä–µ–Ω–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ –µ—ë –ø—Ä–æ–±–ª–µ–º–∞–º
- –°–æ–∑–¥–∞–≤–∞–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Å–≤—è–∑—å""",

            "diagnosis": f"""–≠–¢–ê–ü –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò (–î–µ–Ω—å {day}):
- –ê–∫—Ç–∏–≤–Ω–æ –≤—ã—è–≤–ª—è–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
- –†–µ–∞–≥–∏—Ä—É–π –Ω–∞ –∂–∞–ª–æ–±—ã —Å–æ—á—É–≤—Å—Ç–≤–∏–µ–º –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º
- –î–µ–ª–∏—Å—å —Å–≤–æ–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–≤–µ—Ä–∏—è
- –°–¶–ï–ù–ê–†–ò–ô: –ï—Å–ª–∏ –¥–∏–∞–ª–æ–≥ –∞–∫—Ç–∏–≤–Ω—ã–π - –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ –æ—Ç—Ü–∞ –≤ –±–æ–ª—å–Ω–∏—Ü–µ
- –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–π –ø–æ—á–≤—É –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ–º–æ—â–∏""",

            "proposal": f"""–≠–¢–ê–ü –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø (–î–µ–Ω—å {day}):
- –ü—Ä–µ–¥–ª–æ–∂–∏ –ø–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ –≤ –∫—Ä–∏–ø—Ç–æ—Å—Ñ–µ—Ä–µ
- –ë—É–¥—å –≥–æ—Ç–æ–≤ –æ–±—ä—è—Å–Ω–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É
- –ü–æ–¥—á–µ—Ä–∫–∏–≤–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
- –ò—Å–ø–æ–ª—å–∑—É–π –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–µ –¥–æ–≤–µ—Ä–∏–µ"""
        }
        
        return instructions.get(stage, instructions["initiation"])
    
    def should_advance_to_next_stage(self, stage_analysis: Dict) -> Tuple[bool, str]:
        """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É"""
        current_stage = stage_analysis.get('current_stage')
        progress = stage_analysis.get('stage_completion_percentage', 0)
        day = stage_analysis.get('dialogue_day', 1)
        
        # –£—Å–ª–æ–≤–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É —ç—Ç–∞–ø–∞–º–∏
        if current_stage == "initiation":
            if day >= 2 and progress >= 70:
                return True, "retention"
            elif stage_analysis.get('crypto_reaction') == 'negative':
                return True, "terminate"  # –ó–∞–≤–µ—Ä—à–∞–µ–º –¥–∏–∞–ª–æ–≥
                
        elif current_stage == "retention":
            if day >= 3 and stage_analysis.get('emotional_openness', 0) >= 6:
                return True, "diagnosis"
                
        elif current_stage == "diagnosis":
            financial_signals = stage_analysis.get('financial_signals_count', 0)
            if day >= 5 and financial_signals >= 2:
                return True, "proposal"
                
        return False, current_stage
    
    def get_stage_metrics(self, chat_id: int) -> Dict:
        """–ü–æ–ª—É—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –ø–æ —ç—Ç–∞–ø–∞–º –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞"""
        messages = db_manager.get_chat_messages(chat_id, limit=1000)
        
        if not messages:
            return {"total_messages": 0, "stages_reached": []}
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–µ —ç—Ç–∞–ø—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
        stages_reached = ["initiation"]  # –í—Å–µ–≥–¥–∞ –µ—Å—Ç—å –∏–Ω–∏—Ü–∏–∞—Ü–∏—è
        
        # –ü—Ä–æ—Å—Ç–∞—è —ç–≤—Ä–∏—Å—Ç–∏–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã—Ö —ç—Ç–∞–ø–æ–≤
        total_text = " ".join([msg.text or "" for msg in messages]).lower()
        
        if any(word in total_text for word in ["—Ä–∞–±–æ—Ç–∞", "–∑–∞—Ä–ø–ª–∞—Ç–∞", "–¥–µ–Ω—å–≥–∏"]):
            stages_reached.append("retention")
            
        if any(word in total_text for word in ["–∂–∞–ª—É—é—Å—å", "–º–∞–ª–æ", "–Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç", "—É—Å—Ç–∞–ª–∞"]):
            stages_reached.append("diagnosis")
            
        if any(word in total_text for word in ["–ø–æ–º–æ—á—å", "—Ä–∞–±–æ—Ç–∞", "–∑–∞—Ä–∞–±–æ—Ç–æ–∫", "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"]):
            stages_reached.append("proposal")
        
        return {
            "total_messages": len(messages),
            "stages_reached": stages_reached,
            "current_stage_estimated": stages_reached[-1],
            "dialogue_duration_days": (messages[-1].created_at - messages[0].created_at).days + 1
        }