"""
–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ç—Ä–∞–≤–º –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤–æ–≤–ª–µ—á–µ–Ω–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–ª—É–±–æ–∫–æ–π —Å–≤—è–∑–∏
"""
import json
from typing import Dict, List, Optional, Tuple
from datetime import datetime
from openai import OpenAI
from loguru import logger

from ..config.settings import settings


class TraumaAnalyzer:
    """–ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–≤–º –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π"""
    
    def __init__(self):
        self.openai_client = OpenAI(api_key=settings.openai_api_key)
        
        # –ò—Å—Ç–æ—Ä–∏–∏ –°—Ç–∞—Å–∞ –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è
        self.stas_stories = {
            "child_friend_death": {
                "title": "–°–º–µ—Ä—Ç—å –ª—É—á—à–µ–≥–æ –¥—Ä—É–≥–∞ –≤ –¥–µ—Ç—Å—Ç–≤–µ",
                "trigger_topics": ["–¥–µ—Ç—Å—Ç–≤–æ", "–¥—Ä—É–∑—å—è", "–ø—Ä–µ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ", "—Å–º–µ—Ä—Ç—å", "–Ω–∞—Å–∏–ª–∏–µ"],
                "emotional_weight": 9,
                "full_story": """–í –¥–µ—Ç—Å—Ç–≤–µ —É –Ω–∞—Å –±—ã–ª —Å–≤–æ–π —Ä–∞–π–æ–Ω, —Å–≤–æ—è –∫–æ–º–ø–∞–Ω–∏—è, —Å–≤–æ–∏ –¥–≤–æ—Ä—ã. –ò –±—ã–ª –í–ª–∞–¥ ‚Äî –º–æ–π –¥—Ä—É–≥ —Å —Å–µ–º–∏ –ª–µ—Ç. –û–Ω –±—ã–ª –∏–∑ —Ç–µ—Ö, –∫—Ç–æ —Ä–≤—ë—Ç—Å—è –≤–µ–∑–¥–µ –ø–µ—Ä–≤—ã–º: –Ω–∞ —Å—Ç—Ä–æ–π–∫—É, –≤ –∑–∞–±—Ä–æ—à–∫—É, –Ω–∞ –≥–∞—Ä–∞–∂–∏. –ú—ã —Å –Ω–∏–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –±—ã–ª–∏ –≤–º–µ—Å—Ç–µ: —à–∫–æ–ª–∞, –ø—Ä–∏—Å—Ç–∞–≤–∫–∏, —Ñ—É—Ç–±–æ–ª, –ø–µ—Ä–≤—ã–µ —Å–∏–≥–∞—Ä–µ—Ç—ã –∑–∞ –≥–∞—Ä–∞–∂–∞–º–∏ –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã –ø—Ä–æ —Ç–æ, –∫–∞–∫ –º—ã –±—É–¥–µ–º –≥–æ–Ω—è—Ç—å –Ω–∞ –±–∞–π–∫–∞—Ö, –∫–æ–≥–¥–∞ –≤—ã—Ä–∞—Å—Ç–µ–º.

–í—Å—ë –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–µ—Ç–æ–º, –∫–æ–≥–¥–∞ –Ω–∞–º –±—ã–ª–æ –ø–æ 13.

–û–Ω —Å–≤—è–∑–∞–ª—Å—è —Å –¥–≤—É–º—è —Ä–µ–±—è—Ç–∞–º–∏ –ø–æ—Å—Ç–∞—Ä—à–µ. –Ø —Ç–æ–≥–¥–∞ —É–∂–µ —á—É–≤—Å—Ç–≤–æ–≤–∞–ª, —á—Ç–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫: —Ç–µ –ø–∞—Ä–Ω–∏ –±—ã–ª–∏ —Å –º—É—Ç–Ω–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–µ–π ‚Äî —Ö–æ–¥–∏–ª–∏ —Å–ª—É—Ö–∏, —á—Ç–æ —É –Ω–∏—Ö –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Ä–∫–æ—Ç–∏–∫–∞–º–∏ –∏ –≤–æ—Ä–æ–≤—Å—Ç–≤–æ–º. –Ø –ø—ã—Ç–∞–ª—Å—è –æ—Ç–≥–æ–≤–æ—Ä–∏—Ç—å –µ–≥–æ, –Ω–æ —É –í–ª–∞–¥–∞ –±—ã–ª –∫–∞–∫–æ–π-—Ç–æ —Å–≤–æ–π —Ä–æ–º–∞–Ω—Ç–∏–∑–º ‚Äî –º–æ–ª, "–æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –∏—â—É—Ç –ª—ë–≥–∫–∏–µ –¥–µ–Ω—å–≥–∏, –Ω–∏—á–µ–≥–æ —Ç–∞–∫–æ–≥–æ".

–û–Ω–∏ –≤—Ç—è–Ω—É–ª–∏ –µ–≥–æ –≤ ¬´–¥–µ–ª–æ¬ª ‚Äî –æ–≥—Ä–∞–±–∏—Ç—å –¥–æ–º —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫–æ–≤ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö. –°—Ü–µ–Ω–∞—Ä–∏–π –±—ã–ª –ø—Ä–æ—Å—Ç–æ–π: –í–ª–∞–¥ –¥–æ–ª–∂–µ–Ω –±—ã–ª –∑–∞–π—Ç–∏, —Ä–∞–∑–≤–µ–¥–∞—Ç—å, –æ—Ç–≤–ª–µ—á—å. –ù–æ –æ–Ω –Ω–∞—á–∞–ª —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è. –°–∫–∞–∑–∞–ª, —á—Ç–æ –Ω–µ —Ö–æ—á–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å. –û–Ω–∏ –∏—Å–ø—É–≥–∞–ª–∏—Å—å, —á—Ç–æ –æ–Ω —Ä–∞—Å—Å–∫–∞–∂–µ—Ç. –ò —Ç–æ–≥–¥–∞‚Ä¶

–û–Ω–∏ –ø–µ—Ä–µ–±–∏–ª–∏ –µ–º—É —à–µ—é –ª–æ–ø–∞—Ç–æ–π. –ü—Ä–æ—Å—Ç–æ —Ç–∞–∫. –ó–∞—Ç–µ–º –∑–∞–º–æ—Ç–∞–ª–∏ –µ–≥–æ –≤ –∫–æ–≤—ë—Ä –∏ –≤—ã–∫–∏–Ω—É–ª–∏ –Ω–∞ –∑–∞–±—Ä–æ—à–∫—É –∑–∞ —Ä–∞–π–æ–Ω–æ–º, –∫–∞–∫ –º—É—Å–æ—Ä.

–Ø —É–∑–Ω–∞–ª –æ–± —ç—Ç–æ–º —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π, –∫–æ–≥–¥–∞ –µ–≥–æ –º–∞—Ç—å –ø–æ–¥–Ω—è–ª–∞ —à—É–º –∏ –Ω–∞—á–∞–ª–∏ –∏—Å–∫–∞—Ç—å. –Ø –ø–æ–º–Ω—é, –∫–∞–∫ –º—ã —Å—Ç–æ—è–ª–∏ –≤–æ –¥–≤–æ—Ä–µ –∏ –Ω–µ –º–æ–≥–ª–∏ –ø–æ–≤–µ—Ä–∏—Ç—å. –û–Ω –ø—Ä–æ—Å—Ç–æ –∏—Å—á–µ–∑. –ê –ø–æ—Ç–æ–º –µ–≥–æ –Ω–∞—à–ª–∏. –ú–∞–ª—å—á–∏–∫–∞, —Å –∫–æ—Ç–æ—Ä—ã–º —è –¥–µ–ª–∏–ª —Ç–∞–π–Ω—ã, –æ–±–º–µ–Ω–∏–≤–∞–ª—Å—è –∫–∞—Å—Å–µ—Ç–∞–º–∏ –∏ –ø—Ä—è—Ç–∞–ª—Å—è –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π.

–° —Ç–µ—Ö –ø–æ—Ä —É –º–µ–Ω—è –≤–Ω—É—Ç—Ä–∏ –æ—Å—Ç–∞–ª—Å—è –Ω–µ–∫–∏–π —â–µ–ª—á–æ–∫. –Ø —Ä–∞–Ω–æ –ø–æ–Ω—è–ª, —á—Ç–æ –∂–∏–∑–Ω—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∂–µ—Å—Ç–æ–∫–æ–π. –ò —á—Ç–æ –≤ –æ–¥–∏–Ω –¥–µ–Ω—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Ç–µ—Ä—è—Ç—å —Ç–æ–≥–æ, –∫—Ç–æ –±—ã–ª —Ç–µ–±–µ –±–ª–∏–∂–µ –≤—Å–µ—Ö. –≠—Ç–æ –Ω–∞—É—á–∏–ª–æ –º–µ–Ω—è –æ–¥–Ω–æ–º—É: —Ü–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏—Ö –ª—é–¥–µ–π, –æ—Ç–ª–∏—á–∞—Ç—å –ª–æ–∂—å –æ—Ç –ø—Ä–∞–≤–¥—ã –∏ –Ω–µ –º–æ–ª—á–∞—Ç—å, –µ—Å–ª–∏ –≤–∏–¥–∏—à—å, —á—Ç–æ –∫—Ç–æ-—Ç–æ –∏–¥—ë—Ç –Ω–µ —Ç—É–¥–∞."""
            },
            
            "partner_loss": {
                "title": "–ü–æ—Ç–µ—Ä—è –ø–∞—Ä—Ç–Ω–µ—Ä—à–∏ –∏ —Ä–µ–±–µ–Ω–∫–∞",
                "trigger_topics": ["–æ—Ç–Ω–æ—à–µ–Ω–∏—è", "—Å–µ–º—å—è", "–¥–µ—Ç–∏", "–ø–æ—Ç–µ—Ä—è", "—Å–º–µ—Ä—Ç—å", "–±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å"],
                "emotional_weight": 10,
                "full_story": """–ë—ã–ª–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –¥–æ–ª–∂–µ–Ω –±—ã–ª –≤—ã—Ä–∞—Å—Ç–∏ –±—Ä–∞–∫. –ù–æ –≤—ã—Ä–æ—Å–ª–æ —á—Ç–æ-—Ç–æ —Å–æ–≤—Å–µ–º –¥—Ä—É–≥–æ–µ‚Ä¶

–ú—ã –±—ã–ª–∏ –≤–º–µ—Å—Ç–µ –ø–æ—á—Ç–∏ –ø—è—Ç—å –ª–µ—Ç. –ó–Ω–∞–µ—à—å, –∏–∑ —Ç–µ—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ –≤–ª—é–±–ª—ë–Ω–Ω–æ—Å—Ç—å, –∞ –ø—Ä–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø–∞—Ä—Ç–Ω—ë—Ä—Å—Ç–≤–æ: –≤–º–µ—Å—Ç–µ –≤—Å—Ç–∞–≤–∞–ª–∏, —Å—Ç—Ä–æ–∏–ª–∏ –ø–ª–∞–Ω—ã, –º–µ—á—Ç–∞–ª–∏ –æ –¥–æ–º–µ —Å –æ–∫–Ω–∞–º–∏ –Ω–∞ –æ–∑–µ—Ä–æ, —Å–ø–æ—Ä–∏–ª–∏ –æ —á—ë–º-—Ç–æ –≥–ª—É–ø–æ–º, –∞ –ø–æ—Ç–æ–º –º–∏—Ä–∏–ª–∏—Å—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –∑–Ω–∞–ª–∏ ‚Äî –¥–∞–ª—å—à–µ –∂–∏—Ç—å –¥—Ä—É–≥ –±–µ–∑ –¥—Ä—É–≥–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è.

–í –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç –º—ã –ø–æ–Ω—è–ª–∏, —á—Ç–æ –≥–æ—Ç–æ–≤—ã –∫ —Å–µ–º—å–µ. –£–∑–Ω–∞–ª–∏, —á—Ç–æ –±—É–¥–µ—Ç —Ä–µ–±—ë–Ω–æ–∫ ‚Äî —ç—Ç–æ –±—ã–ª–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å—á–∞—Å—Ç—å–µ, —ç—Ç–æ –±—ã–ª –Ω–æ–≤—ã–π –≤–∏—Ç–æ–∫. –Ø –≤–∏–¥–µ–ª, –∫–∞–∫ –æ–Ω–∞ —Å–º–æ—Ç—Ä–µ–ª–∞ –Ω–∞ –£–ó–ò, –∫–∞–∫ –≥–ª–∞–¥–∏–ª–∞ –∂–∏–≤–æ—Ç, –∫–∞–∫ —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª–∞ –µ–≥–æ –ø–æ –∏–º–µ–Ω–∏, —Ö–æ—Ç—è –¥–∞–∂–µ –ø–æ–ª –µ—â—ë –Ω–µ –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω. –ú—ã –º–Ω–æ–≥–æ —Å–º–µ—è–ª–∏—Å—å, –≤—ã–±–∏—Ä–∞–ª–∏ –∏–º–µ–Ω–∞, –ø–æ–∫—É–ø–∞–ª–∏ –¥–µ—Ç—Å–∫–∏–µ –≤–µ—â–∏, –ø–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–ª–∏ —Å–ø–∞–ª—å–Ω—é‚Ä¶

–ù–æ –≤—Å—ë –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å –≤ –æ–¥–∏–Ω –¥–µ–Ω—å.

–†–æ–¥—ã –Ω–∞—á–∞–ª–∏—Å—å –Ω–∞ –ø–∞—Ä—É –Ω–µ–¥–µ–ª—å —Ä–∞–Ω—å—à–µ. –í—Ä–æ–¥–µ –±—ã –≤—Å—ë —à–ª–æ —Ö–æ—Ä–æ—à–æ ‚Äî –¥–æ —Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, –ø–æ–∫–∞ –Ω–µ —Å—Ç–∞–ª–æ —è—Å–Ω–æ, —á—Ç–æ –Ω–∞—á–∞–ª–∏—Å—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏—è. –î–∞–ª—å—à–µ –≤—Å—ë –±—ã–ª–æ –∫–∞–∫ –≤ —Ç—É–º–∞–Ω–µ: —Å–∫–æ—Ä–∞—è, —Ä–µ–∞–Ω–∏–º–∞—Ü–∏—è, –∫—Ä–∞—Å–Ω—ã–µ –ª–∞–º–ø—ã, –≤—Ä–∞—á–∏ –±–µ–≥–∞—é—Ç‚Ä¶ –∏ —Ç–∏—à–∏–Ω–∞. –°—Ç—Ä–∞—à–Ω–∞—è, –∞–±—Å–æ–ª—é—Ç–Ω–∞—è —Ç–∏—à–∏–Ω–∞. –û–Ω–∞ –Ω–µ –≤—ã–∂–∏–ª–∞. –ò –Ω–∞—à –º–∞–ª—ã—à —Ç–æ–∂–µ.

–≠—Ç–æ –±—ã–ª –∫—Ä–∞—Ö ‚Äî –∫–∞–∫ –±—É–¥—Ç–æ –º–∏—Ä –ø—Ä–æ—Å—Ç–æ –æ–±—Ä—É—à–∏–ª—Å—è –≤ —á—ë—Ä–Ω—É—é –¥—ã—Ä—É. –Ø –Ω–µ –∑–Ω–∞–ª, –∫–∞–∫ –¥–∞–ª—å—à–µ –¥—ã—à–∞—Ç—å, –∑–∞—á–µ–º –ø—Ä–æ—Å—ã–ø–∞—Ç—å—Å—è, –∫–∞–∫ –≤–æ–æ–±—â–µ –±—ã—Ç—å. –°–Ω–∞—Ä—É–∂–∏ —è –≤—Ä–æ–¥–µ –±—ã –±—ã–ª –∂–∏–≤, –Ω–æ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—è –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–∏–∫–æ–≥–æ.

–ü–æ—á—Ç–∏ –¥–≤–∞ –≥–æ–¥–∞ —É—à–ª–æ –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å —Å–µ–±—è –ø–æ –∫—É—Å–æ—á–∫–∞–º. –ü—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è, —Ç–∏—à–∏–Ω–∞, —Ä–∞–∑–≥–æ–≤–æ—Ä—ã —Å —Å–æ–±–æ–π, –±–µ—Å—Å–æ–Ω–Ω—ã–µ –Ω–æ—á–∏, —Å–ª—É—á–∞–π–Ω—ã–µ —Å–ª—ë–∑—ã –Ω–∞ —É–ª–∏—Ü–µ‚Ä¶ –ù–æ —Å–µ–≥–æ–¥–Ω—è —è –º–æ–≥—É —ç—Ç–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å ‚Äî –∏ –Ω–µ –ø–ª–∞–∫–∞—Ç—å. –≠—Ç–æ –Ω–µ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –±–æ–ª—å —É—à–ª–∞. –û–Ω–∞ –ø—Ä–æ—Å—Ç–æ —Ç–µ–ø–µ—Ä—å –Ω–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç –º–Ω–æ–π. –Ø –∂–∏–≤—É –¥–∞–ª—å—à–µ ‚Äî –∏ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –≤—Å–ø–æ–º–∏–Ω–∞—é —Ç–æ, —á—Ç–æ —É –Ω–∞—Å –±—ã–ª–æ."""
            }
        }
    
    def analyze_emotional_context(self, conversation_text: str, new_messages: str) -> Dict:
        """–ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ —Ç—Ä–∞–≤–º"""
        try:
            # –ò–ò –∞–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π –∏ —Ç—Ä–∞–≤–º
            emotional_analysis = self._get_ai_emotional_analysis(conversation_text, new_messages)
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∏—Å—Ç–æ—Ä–∏–π –°—Ç–∞—Å–∞
            story_recommendations = self._analyze_story_sharing_opportunity(
                emotional_analysis, new_messages
            )
            
            result = {
                "emotional_analysis": emotional_analysis,
                "story_recommendations": story_recommendations,
                "trust_level": self._calculate_trust_level(emotional_analysis),
                "emotional_connection": self._calculate_emotional_connection(emotional_analysis),
                "analyzed_at": datetime.utcnow().isoformat()
            }
            
            logger.info(f"üíù –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑: –¥–æ–≤–µ—Ä–∏–µ {result['trust_level']}/10, "
                       f"—Å–≤—è–∑—å {result['emotional_connection']}/10")
            
            return result
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–∞–≤–º: {e}")
            return self._get_fallback_emotional_analysis()

    def _get_ai_emotional_analysis(self, history: str, new_messages: str) -> Dict:
        """–ò–ò –∞–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        try:
            prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–≤—É—à–∫–∏ –∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è –≤ –¥–∏–∞–ª–æ–≥–µ.

    –ò–°–¢–û–†–ò–Ø –î–ò–ê–õ–û–ì–ê:
    {history}

    –ù–û–í–´–ï –°–û–û–ë–©–ï–ù–ò–Ø:
    {new_messages}

    –í–ï–†–ù–ò –¢–û–õ–¨–ö–û JSON –ë–ï–ó –û–ë–ï–†–¢–ö–ò:
    {{
        "emotional_openness": 1-10,
        "trust_level": 1-10,
        "vulnerability_shown": 1-10,
        "traumas_shared": ["–æ–ø–∏—Å–∞–Ω–∏–µ —Ç—Ä–∞–≤–º –µ—Å–ª–∏ –µ—Å—Ç—å"],
        "emotional_triggers": ["—Ç–µ–º—ã –∫–æ—Ç–æ—Ä—ã–µ –µ—ë –∑–∞–¥–µ–≤–∞—é—Ç"],
        "support_needed": true/false,
        "reciprocity_readiness": 1-10,
        "intimacy_level": 1-10,
        "emotional_state": "—Ä–∞–¥–æ—Å—Ç—å/–≥—Ä—É—Å—Ç—å/–∑–ª–æ—Å—Ç—å/–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ/—Å–º–µ—à–∞–Ω–Ω–æ",
        "personal_details_shared": ["–ª–∏—á–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞"],
        "family_situation": "—á—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ —Å–µ–º—å–µ",
        "relationship_history": "—á—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –æ–± –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö"
    }}

    –ò—â–∏ –ø—Ä–∏–∑–Ω–∞–∫–∏:
    - –†–∞—Å—Å–∫–∞–∑—ã –æ —Ç—Ä–∞–≤–º–∞—Ö, –ø–æ—Ç–µ—Ä—è—Ö, –±–æ–ª–∏
    - –°–µ–º–µ–π–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–æ–±–ª–µ–º—ã –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö
    - –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –¥–µ–ª–∏—Ç—å—Å—è –ª–∏—á–Ω—ã–º
    - –ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–∏
    - –í–∑–∞–∏–º–Ω–æ—Å—Ç—å –≤ —Ä–∞—Å–∫—Ä—ã—Ç–∏–∏"""

            response = self.openai_client.chat.completions.create(
                model=settings.openai_model,
                messages=[{"role": "user", "content": prompt}],
                temperature=0.4,
                max_tokens=500
            )

            content = response.choices[0].message.content.strip()
            if not content:
                logger.warning(f"–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç OpenAI –¥–ª—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞")
                return self._get_default_emotional_analysis()

            # –û—á–∏—â–∞–µ–º –æ—Ç markdown –æ–±–µ—Ä—Ç–æ–∫
            content = self._clean_json_response(content)

            if not content:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å JSON –æ—Ç–≤–µ—Ç")
                return self._get_default_emotional_analysis()

            try:
                return json.loads(content)
            except json.JSONDecodeError as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç OpenAI: {content[:100]}...")
                return self._get_default_emotional_analysis()

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ò–ò –∞–Ω–∞–ª–∏–∑–∞ —ç–º–æ—Ü–∏–π: {e}")
            return self._get_default_emotional_analysis()

    def _clean_json_response(self, content: str) -> str:
        """–û—á–∏—Å—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ OpenAI –æ—Ç markdown –æ–±–µ—Ä—Ç–æ–∫"""
        # –£–±–∏—Ä–∞–µ–º markdown –æ–±–µ—Ä—Ç–∫–∏
        content = content.replace('```json', '').replace('```', '')

        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
        content = content.strip()

        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ JSON, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        if not content.startswith('{'):
            return ""

        return content
    
    def _analyze_story_sharing_opportunity(self, emotional_analysis: Dict, new_messages: str) -> Dict:
        """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏–µ–π –°—Ç–∞—Å–∞"""
        trust_level = emotional_analysis.get("trust_level", 0)
        vulnerability = emotional_analysis.get("vulnerability_shown", 0)
        traumas_shared = emotional_analysis.get("traumas_shared", [])
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∫–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç
        message_lower = new_messages.lower()
        
        story_scores = {}
        for story_id, story_data in self.stas_stories.items():
            score = 0
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã–µ —Ç–µ–º—ã
            for trigger in story_data["trigger_topics"]:
                if trigger in message_lower:
                    score += 2
            
            # –ë–æ–Ω—É—Å –∑–∞ –≤—ã—Å–æ–∫–æ–µ –¥–æ–≤–µ—Ä–∏–µ
            if trust_level >= 7:
                score += 3
            
            # –ë–æ–Ω—É—Å –∑–∞ –µ—ë –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç—å
            if vulnerability >= 6:
                score += 2
            
            # –ë–æ–Ω—É—Å –µ—Å–ª–∏ –æ–Ω–∞ –¥–µ–ª–∏–ª–∞—Å—å —Ç—Ä–∞–≤–º–∞–º–∏
            if traumas_shared:
                score += 4
            
            story_scores[story_id] = score
        
        # –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à—É—é –∏—Å—Ç–æ—Ä–∏—é
        best_story_id = max(story_scores.keys(), key=lambda k: story_scores[k])
        best_score = story_scores[best_story_id]
        
        return {
            "recommended_story": best_story_id if best_score >= 5 else None,
            "story_scores": story_scores,
            "readiness_level": "–≤—ã—Å–æ–∫–∞—è" if best_score >= 8 else "—Å—Ä–µ–¥–Ω—è—è" if best_score >= 5 else "–Ω–∏–∑–∫–∞—è",
            "sharing_strategy": self._get_sharing_strategy(best_score, best_story_id)
        }
    
    def _get_sharing_strategy(self, score: int, story_id: str) -> str:
        """–°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –∏—Å—Ç–æ—Ä–∏–∏"""
        if score >= 8:
            return f"–ú–æ–∂–Ω–æ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –ø–æ–ª–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π '{story_id}' - –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è"
        elif score >= 5:
            return f"–ú–æ–∂–Ω–æ –Ω–∞–º–µ–∫–Ω—É—Ç—å –Ω–∞ –∏—Å—Ç–æ—Ä–∏—é '{story_id}' - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é"
        else:
            return "–ù–µ –≤—Ä–µ–º—è –¥–ª—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è - –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å –¥–æ–≤–µ—Ä–∏–µ"
    
    def generate_trauma_response(self, her_trauma: str, emotional_analysis: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Ç—Ä–∞–≤–º—É"""
        try:
            trust_level = emotional_analysis.get("trust_level", 5)
            
            prompt = f"""–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –°—Ç–∞—Å–∞ –Ω–∞ —Ç—Ä–∞–≤–º—É –¥–µ–≤—É—à–∫–∏.

–û–ù–ê –ü–û–î–ï–õ–ò–õ–ê–°–¨: {her_trauma}

–£–†–û–í–ï–ù–¨ –î–û–í–ï–†–ò–Ø: {trust_level}/10

–ö–û–ù–¢–ï–ö–°–¢: –°—Ç–∞—Å 27 –ª–µ—Ç, –∫—Ä–∏–ø—Ç–æ—Ç—Ä–µ–π–¥–µ—Ä, —É –Ω–µ–≥–æ –µ—Å—Ç—å –¥–≤–µ –±–æ–ª–µ–∑–Ω–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏:
1. –°–º–µ—Ä—Ç—å –ª—É—á—à–µ–≥–æ –¥—Ä—É–≥–∞ –≤ 13 –ª–µ—Ç (—É–±–∏–ª–∏)  
2. –ü–æ—Ç–µ—Ä—è –ø–∞—Ä—Ç–Ω–µ—Ä—à–∏ –∏ —Ä–µ–±–µ–Ω–∫–∞ –ø—Ä–∏ —Ä–æ–¥–∞—Ö

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Å–∫—Ä–µ–Ω–Ω—è—è —Ä–µ–∞–∫—Ü–∏—è –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏
- –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ
- 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è + –¥–µ–ª–∏–∫–∞—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å
- –ï—Å–ª–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç - –Ω–∞–º–µ–∫–Ω—É—Ç—å –Ω–∞ —Å–≤–æ–π –æ–ø—ã—Ç
- –ù–µ –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã, —Ç–æ–ª—å–∫–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∞

–ü–†–ò–ú–ï–†–´ –•–û–†–û–®–ò–• –û–¢–í–ï–¢–û–í:
"–°–æ—á—É–≤—Å—Ç–≤—É—é –∏—Å–∫—Ä–µ–Ω–Ω–µ... –£ –º–µ–Ω—è —Ç–æ–∂–µ –±—ã–ª–∞ –ø–æ—Ö–æ–∂–∞—è –ø–æ—Ç–µ—Ä—è. –ö–∞–∫ —Ç—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è —Å —ç—Ç–∏–º?"
"–ü–æ–Ω–∏–º–∞—é —ç—Ç—É –±–æ–ª—å. –ü–æ—Ç–µ—Ä—è–ª –±–ª–∏–∑–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –¥–µ—Ç—Å—Ç–≤–µ. –û—Ç–ø—É—Å—Ç–∏–ª–æ –∏–ª–∏ –¥–æ —Å–∏—Ö –ø–æ—Ä —Ç—è–∂–µ–ª–æ?"
"–≠—Ç–æ –±–æ–ª—å–Ω–æ... –ó–Ω–∞—é —á—Ç–æ –∑–Ω–∞—á–∏—Ç –ø–æ—Ç–µ—Ä—è—Ç—å —Ç–æ–≥–æ, –∫—Ç–æ –¥–æ—Ä–æ–≥. –ï—Å—Ç—å –∫—Ç–æ-—Ç–æ —Ä—è–¥–æ–º –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç?"

–û–¢–í–ï–¢–¨ –û–î–ù–ò–ú –°–û–û–ë–©–ï–ù–ò–ï–ú –û–¢ –°–¢–ê–°–ê:"""

            response = self.openai_client.chat.completions.create(
                model=settings.openai_model,
                messages=[{"role": "user", "content": prompt}],
                temperature=0.7,
                max_tokens=150
            )
            
            return response.choices[0].message.content.strip()
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Ç—Ä–∞–≤–º—É: {e}")
            return "–°–æ—á—É–≤—Å—Ç–≤—É—é... –≠—Ç–æ —Ç—è–∂–µ–ª–æ. –ö–∞–∫ —Ç—ã —Å —ç—Ç–∏–º —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è?"
    
    def should_share_stas_story(self, story_recommendations: Dict, trust_level: int) -> Tuple[bool, str, str]:
        """–û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω—É–∂–Ω–æ –ª–∏ –¥–µ–ª–∏—Ç—å—Å—è –∏—Å—Ç–æ—Ä–∏–µ–π –°—Ç–∞—Å–∞"""
        recommended_story = story_recommendations.get("recommended_story")
        readiness = story_recommendations.get("readiness_level", "–Ω–∏–∑–∫–∞—è")
        
        if recommended_story and readiness in ["–≤—ã—Å–æ–∫–∞—è", "—Å—Ä–µ–¥–Ω—è—è"] and trust_level >= 6:
            story_data = self.stas_stories[recommended_story]
            
            if readiness == "–≤—ã—Å–æ–∫–∞—è":
                return True, recommended_story, story_data["full_story"]
            else:
                # –ö–æ—Ä–æ—Ç–∫–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å—Ä–µ–¥–Ω–µ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
                short_version = self._get_story_teaser(recommended_story)
                return True, recommended_story, short_version
        
        return False, "", ""
    
    def _get_story_teaser(self, story_id: str) -> str:
        """–ö–æ—Ä–æ—Ç–∫–∞—è –≤–µ—Ä—Å–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–∏"""
        teasers = {
            "child_friend_death": "–£ –º–µ–Ω—è –≤ –¥–µ—Ç—Å—Ç–≤–µ –±—ã–ª –ª—É—á—à–∏–π –¥—Ä—É–≥... –í 13 –ª–µ—Ç –µ–≥–æ —É–±–∏–ª–∏ –∏–∑-–∑–∞ –∫–∞–∫–æ–π-—Ç–æ –≥–ª—É–ø–æ—Å—Ç–∏. –î–æ —Å–∏—Ö –ø–æ—Ä –ø–æ–º–Ω—é.",
            "partner_loss": "–ë—ã–ª–∏ —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ —Å–µ–º—å—é... –ù–æ –ø–æ—Ç–µ—Ä—è–ª –∏—Ö –æ–±–æ–∏—Ö –ø—Ä–∏ —Ä–æ–¥–∞—Ö. –≠—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ –≤—Å—ë."
        }
        return teasers.get(story_id, "")
    
    def _calculate_trust_level(self, emotional_analysis: Dict) -> int:
        """–†–∞—Å—á–µ—Ç —É—Ä–æ–≤–Ω—è –¥–æ–≤–µ—Ä–∏—è"""
        trust = emotional_analysis.get("trust_level", 5)
        openness = emotional_analysis.get("emotional_openness", 5)
        vulnerability = emotional_analysis.get("vulnerability_shown", 5)
        
        return min(10, max(1, (trust + openness + vulnerability) // 3))
    
    def _calculate_emotional_connection(self, emotional_analysis: Dict) -> int:
        """–†–∞—Å—á–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å–≤—è–∑–∏"""
        intimacy = emotional_analysis.get("intimacy_level", 5)
        reciprocity = emotional_analysis.get("reciprocity_readiness", 5)
        support_needed = 2 if emotional_analysis.get("support_needed", False) else 0
        
        return min(10, max(1, (intimacy + reciprocity + support_needed) // 3))
    
    def _get_default_emotional_analysis(self) -> Dict:
        """–ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π"""
        return {
            "emotional_openness": 5,
            "trust_level": 5,
            "vulnerability_shown": 3,
            "traumas_shared": [],
            "emotional_triggers": [],
            "support_needed": False,
            "reciprocity_readiness": 5,
            "intimacy_level": 3,
            "emotional_state": "–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ",
            "personal_details_shared": [],
            "family_situation": "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
            "relationship_history": "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        }
    
    def _get_fallback_emotional_analysis(self) -> Dict:
        """–ê–Ω–∞–ª–∏–∑ –ø—Ä–∏ –æ—à–∏–±–∫–µ"""
        return {
            "emotional_analysis": self._get_default_emotional_analysis(),
            "story_recommendations": {
                "recommended_story": None,
                "story_scores": {},
                "readiness_level": "–Ω–∏–∑–∫–∞—è",
                "sharing_strategy": "–ü—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å –¥–æ–≤–µ—Ä–∏–µ"
            },
            "trust_level": 5,
            "emotional_connection": 3,
            "analyzed_at": datetime.utcnow().isoformat()
        }