"""
–ü—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ - –±–µ–∑ –ø–µ—Ä–µ—É—Å–ª–æ–∂–Ω–µ–Ω–∏—è
"""
import click
from loguru import logger

from ..database.database import db_manager


class StatsCommands:
    """–ü—Ä–æ—Å—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""

    @staticmethod
    @click.command()
    @click.option('--detailed', '-d', is_flag=True, help='–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    def stats(detailed: bool):
        """üìä –ü—Ä–æ—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤"""
        try:
            active_chats = db_manager.get_active_chats()

            if not active_chats:
                click.echo("üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤")
                return

            click.echo(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤:")
            click.echo("=" * 50)
            click.echo(f"   –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤: {len(active_chats)}")

            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏
            total_messages = 0
            total_ai_messages = 0
            chats_with_facts = 0

            for chat in active_chats:
                stats = db_manager.get_message_statistics(chat.id)
                total_messages += stats['total_messages']
                total_ai_messages += stats['ai_messages']

                facts = db_manager.get_person_facts(chat.id)
                if facts:
                    chats_with_facts += 1

            click.echo(f"   –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {total_messages}")
            click.echo(f"   –û—Ç–≤–µ—Ç–æ–≤ –æ—Ç –ò–ò: {total_ai_messages}")
            click.echo(f"   –î–∏–∞–ª–æ–≥–æ–≤ —Å —Ñ–∞–∫—Ç–∞–º–∏: {chats_with_facts}")

            if total_messages > 0:
                response_rate = (total_ai_messages / (total_messages - total_ai_messages)) * 100
                click.echo(f"   –ü—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–≤–µ—Ç–æ–≤: {response_rate:.1f}%")

            # –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞
            if detailed and active_chats:
                click.echo(f"\nüí¨ –¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤:")
                click.echo("-" * 50)

                # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–æ–æ–±—â–µ–Ω–∏–π
                chat_stats = []
                for chat in active_chats:
                    stats = db_manager.get_message_statistics(chat.id)
                    chat_stats.append((chat, stats['total_messages']))

                chat_stats.sort(key=lambda x: x[1], reverse=True)

                for chat, msg_count in chat_stats[:10]:
                    name = chat.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

                    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å—Ç–∞—Ç—É—Å
                    facts = db_manager.get_person_facts(chat.id)
                    status_indicators = []

                    if any(f.fact_type == "financial_complaint" for f in facts):
                        status_indicators.append("üí∞")
                    if any(f.fact_type == "expensive_dream" for f in facts):
                        status_indicators.append("‚ú®")
                    if any(f.fact_type == "job" for f in facts):
                        status_indicators.append("üíº")

                    status = "".join(status_indicators) if status_indicators else "üí¨"

                    click.echo(f"   {status} {name} ({chat.id}): {msg_count} —Å–æ–æ–±—â–µ–Ω–∏–π")

        except Exception as e:
            click.echo(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

    @staticmethod
    @click.command()
    @click.option('--chat-id', '-c', type=int, help='ID —á–∞—Ç–∞')
    def facts(chat_id: int):
        """üìù –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∞–∫—Ç—ã –æ —Å–æ–±–µ—Å–µ–¥–Ω–∏—Ü–∞—Ö"""
        if not chat_id:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â—É—é —Å–≤–æ–¥–∫—É –ø–æ –≤—Å–µ–º —á–∞—Ç–∞–º
            active_chats = db_manager.get_active_chats()

            if not active_chats:
                click.echo("üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤")
                return

            click.echo(f"\nüìù –§–∞–∫—Ç—ã –ø–æ –≤—Å–µ–º –¥–∏–∞–ª–æ–≥–∞–º:")
            click.echo("=" * 60)

            total_facts = 0
            chats_with_facts = 0

            for chat in active_chats:
                facts = db_manager.get_person_facts(chat.id)
                if not facts:
                    continue

                chats_with_facts += 1
                total_facts += len(facts)

                name = chat.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

                # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ñ–∞–∫—Ç—ã –ø–æ —Ç–∏–ø–∞–º
                work_facts = [f for f in facts if f.fact_type == "job"]
                money_facts = [f for f in facts if f.fact_type == "financial_complaint"]
                dream_facts = [f for f in facts if f.fact_type == "expensive_dream"]

                click.echo(f"\nüë§ {name} (ID: {chat.id}):")

                if work_facts:
                    click.echo(f"   üíº –†–∞–±–æ—Ç–∞: {work_facts[0].fact_value}")

                if money_facts:
                    click.echo(f"   üí∞ –ñ–∞–ª–æ–±—ã: {', '.join([f.fact_value for f in money_facts])}")

                if dream_facts:
                    click.echo(f"   ‚ú® –ú–µ—á—Ç—ã: {', '.join([f.fact_value for f in dream_facts])}")

            click.echo(f"\nüìä –ò—Ç–æ–≥–æ:")
            click.echo(f"   –î–∏–∞–ª–æ–≥–æ–≤ —Å —Ñ–∞–∫—Ç–∞–º–∏: {chats_with_facts}")
            click.echo(f"   –í—Å–µ–≥–æ —Ñ–∞–∫—Ç–æ–≤: {total_facts}")
            click.echo(f"\nüí° –î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π: telegram-ai facts -c <chat_id>")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∞–∫—Ç—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞
        facts_list = db_manager.get_person_facts(chat_id)

        if not facts_list:
            click.echo(f"üì≠ –ù–µ—Ç —Ñ–∞–∫—Ç–æ–≤ –æ —Å–æ–±–µ—Å–µ–¥–Ω–∏—Ü–µ –≤ —á–∞—Ç–µ {chat_id}")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —á–∞—Ç–∞
        chat = db_manager.get_chat_by_id(chat_id)
        name = chat.first_name if chat else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è"

        click.echo(f"\nüìù –ß—Ç–æ –º—ã –∑–Ω–∞–µ–º –æ {name} (Chat ID: {chat_id}):")
        click.echo("-" * 60)

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ñ–∞–∫—Ç—ã –ø–æ —Ç–∏–ø–∞–º
        fact_groups = {
            "job": "üíº –†–∞–±–æ—Ç–∞",
            "financial_complaint": "üí∞ –ñ–∞–ª–æ–±—ã –Ω–∞ –¥–µ–Ω—å–≥–∏",
            "expensive_dream": "‚ú® –î–æ—Ä–æ–≥–∏–µ –º–µ—á—Ç—ã",
            "other": "üìÑ –î—Ä—É–≥–æ–µ"
        }

        for fact_type, title in fact_groups.items():
            type_facts = [f for f in facts_list if f.fact_type == fact_type]
            if type_facts:
                click.echo(f"\n{title}:")
                for fact in type_facts:
                    confidence_icon = "üü¢" if fact.confidence >= 0.8 else "üü°"
                    click.echo(f"   {confidence_icon} {fact.fact_value}")

    @staticmethod
    @click.command()
    @click.option('--show-all', '-a', is_flag=True, help='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏')
    def opportunities(show_all: bool):
        """üéØ –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã"""
        try:
            active_chats = db_manager.get_active_chats()
            opportunities_found = False

            click.echo(f"\nüéØ –ê–Ω–∞–ª–∏–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã:")
            click.echo("=" * 60)

            high_opportunities = []
            medium_opportunities = []
            low_opportunities = []

            for chat in active_chats:
                facts = db_manager.get_person_facts(chat.id)

                money_complaints = [f for f in facts if f.fact_type == "financial_complaint"]
                dreams = [f for f in facts if f.fact_type == "expensive_dream"]
                work_facts = [f for f in facts if f.fact_type == "job"]

                # –°—á–∏—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç–∞–¥–∏–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏–π
                stats = db_manager.get_message_statistics(chat.id)
                message_count = stats['total_messages']

                name = chat.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
                if money_complaints and dreams and message_count >= 30:
                    # –í—ã—Å–æ–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
                    high_opportunities.append((chat, money_complaints, dreams, work_facts, message_count))
                    opportunities_found = True

                elif (money_complaints or dreams) and message_count >= 20:
                    # –°—Ä–µ–¥–Ω—è—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
                    medium_opportunities.append((chat, money_complaints, dreams, work_facts, message_count))
                    opportunities_found = True

                elif message_count >= 10 and show_all:
                    # –ù–∏–∑–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å —Ñ–ª–∞–≥–æ–º)
                    low_opportunities.append((chat, money_complaints, dreams, work_facts, message_count))

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã—Å–æ–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
            if high_opportunities:
                click.echo(f"\nüî• –í–´–°–û–ö–ò–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò (–≥–æ—Ç–æ–≤—ã –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é):")
                for chat, complaints, dreams, work, msg_count in high_opportunities:
                    name = chat.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
                    click.echo(f"\nüë§ {name} (ID: {chat.id}) - üéØ –û–¢–õ–ò–ß–ù–ê–Ø –í–û–ó–ú–û–ñ–ù–û–°–¢–¨")
                    click.echo(f"   üìä –°–æ–æ–±—â–µ–Ω–∏–π: {msg_count} (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)")

                    if work:
                        click.echo(f"   üíº –†–∞–±–æ—Ç–∞: {work[0].fact_value}")
                    if complaints:
                        click.echo(f"   üí∞ –ñ–∞–ª–æ–±—ã: {', '.join([f.fact_value for f in complaints])}")
                    if dreams:
                        click.echo(f"   ‚ú® –ú–µ—á—Ç—ã: {', '.join([f.fact_value for f in dreams])}")

                    click.echo(f"   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ú–æ–∂–Ω–æ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —Ä–∞–±–æ—Ç—É –≤ –∫—Ä–∏–ø—Ç–µ!")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ä–µ–¥–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
            if medium_opportunities:
                click.echo(f"\n‚ö° –°–†–ï–î–ù–ò–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò (–Ω—É–∂–Ω–æ –µ—â–µ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å):")
                for chat, complaints, dreams, work, msg_count in medium_opportunities:
                    name = chat.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
                    click.echo(f"\nüë§ {name} (ID: {chat.id}) - ‚ö° –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–∞—è")
                    click.echo(f"   üìä –°–æ–æ–±—â–µ–Ω–∏–π: {msg_count}")

                    if complaints:
                        click.echo(f"   üí∞ –ñ–∞–ª–æ–±—ã: {', '.join([f.fact_value for f in complaints])}")
                    if dreams:
                        click.echo(f"   ‚ú® –ú–µ—á—Ç—ã: {', '.join([f.fact_value for f in dreams])}")

                    missing = []
                    if not complaints:
                        missing.append("–∂–∞–ª–æ–±—ã –Ω–∞ –¥–µ–Ω—å–≥–∏")
                    if not dreams:
                        missing.append("–¥–æ—Ä–æ–≥–∏–µ –º–µ—á—Ç—ã")
                    if msg_count < 30:
                        missing.append(f"–±–æ–ª—å—à–µ –æ–±—â–µ–Ω–∏—è (—Å–µ–π—á–∞—Å {msg_count})")

                    if missing:
                        click.echo(f"   üìù –ù—É–∂–Ω–æ: {', '.join(missing)}")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∏–∑–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
            if low_opportunities and show_all:
                click.echo(f"\nüí¨ –ù–ê–ß–ê–õ–¨–ù–ê–Ø –°–¢–ê–î–ò–Ø (–ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –æ–±—â–µ–Ω–∏–µ):")
                for chat, complaints, dreams, work, msg_count in low_opportunities[:5]:
                    name = chat.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
                    click.echo(f"   üë§ {name} (ID: {chat.id}): {msg_count} —Å–æ–æ–±—â–µ–Ω–∏–π - –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ")

            if not opportunities_found:
                click.echo("üì≠ –ü–æ–∫–∞ –Ω–µ—Ç —è–≤–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã")
                click.echo("\nüí° –°–æ–≤–µ—Ç—ã:")
                click.echo("   ‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥–∏")
                click.echo("   ‚Ä¢ –í—ã—è–≤–ª—è–π—Ç–µ –∂–∞–ª–æ–±—ã –Ω–∞ —Ä–∞–±–æ—Ç—É –∏ –¥–µ–Ω—å–≥–∏")
                click.echo("   ‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å—É–π—Ç–µ—Å—å –¥–æ—Ä–æ–≥–∏–º–∏ –º–µ—á—Ç–∞–º–∏ (–º–∞—à–∏–Ω—ã, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è)")
                click.echo("   ‚Ä¢ –ù–∞–±–∏—Ä–∞–π—Ç–µ –±–æ–ª—å—à–µ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –¥–æ–≤–µ—Ä–∏—è")
            else:
                click.echo(f"\nüìä –ò—Ç–æ–≥–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:")
                click.echo(f"   üî• –í—ã—Å–æ–∫–∏–µ: {len(high_opportunities)}")
                click.echo(f"   ‚ö° –°—Ä–µ–¥–Ω–∏–µ: {len(medium_opportunities)}")
                if show_all:
                    click.echo(f"   üí¨ –ù–∞—á–∞–ª—å–Ω—ã–µ: {len(low_opportunities)}")

        except Exception as e:
            click.echo(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π: {e}")

    @staticmethod
    @click.command()
    def dev():
        """‚ö° –î–µ–≤ —Ä–µ–∂–∏–º - –±—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏"""
        try:
            conversion_stats = db_manager.get_conversion_stats()

            if not conversion_stats:
                click.echo("üì≠ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –¥–∏–∞–ª–æ–≥–∞—Ö")
                return

            click.echo(f"\n‚ö° –î–ï–í –†–ï–ñ–ò–ú - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:")
            click.echo("=" * 60)

            total = conversion_stats['total_dialogues']
            click.echo(f"üìä –í—Å–µ–≥–æ –¥–∏–∞–ª–æ–≥–æ–≤: {total}")

            if total > 0:
                click.echo(f"\nüìà –í–æ—Ä–æ–Ω–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:")
                click.echo(
                    f"   üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è:  {conversion_stats.get('day1_filtering', 0)} ({conversion_stats.get('day1_filtering', 0) / total * 100:.1f}%)")
                click.echo(
                    f"   üíï –£–≥–ª—É–±–ª–µ–Ω–∏–µ:   {conversion_stats.get('day3_deepening', 0)} ({conversion_stats.get('day3_deepening', 0) / total * 100:.1f}%)")
                click.echo(
                    f"   üíº –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:  {conversion_stats.get('day5_offering', 0)} ({conversion_stats.get('day5_offering', 0) / total * 100:.1f}%)")

                click.echo(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
                wants_call = conversion_stats.get('wants_call', 0)
                agreed = conversion_stats.get('agreed_to_help', 0)
                click.echo(f"   üìû –•–æ—Ç—è—Ç —Å–æ–∑–≤–æ–Ω–∏—Ç—å—Å—è: {wants_call}")
                click.echo(f"   ‚úÖ –°–æ–≥–ª–∞—Å–Ω—ã –ø–æ–º–æ—á—å:   {agreed}")

                click.echo(f"\nüíØ –ö–û–ù–í–ï–†–°–ò–Ø: {conversion_stats.get('conversion_rate', 0):.1f}%")

                if conversion_stats.get('conversion_rate', 0) > 0:
                    click.echo("üéâ –ï—Å—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏!")
                else:
                    click.echo("‚ùå –ü–æ–∫–∞ –Ω–µ—Ç —É—Å–ø–µ—à–Ω—ã—Ö –∫–æ–Ω–≤–µ—Ä—Å–∏–π")
                    click.echo("üí° –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥–∏")

        except Exception as e:
            click.echo(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–º–∞–Ω–¥
stats_commands = StatsCommands()