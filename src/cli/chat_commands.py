"""
–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
"""
import asyncio
import click
from loguru import logger

from ..database.database import db_manager


class ChatCommands:
    """–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏"""

    @staticmethod
    @click.command()
    @click.option('--user-id', '-u', type=int, required=True, help='ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram')
    @click.option('--message', '-m', required=True, help='–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')
    def send(user_id: int, message: str):
        """üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""

        async def _send():
            from .main import app
            await app.send_message(user_id, message)

        asyncio.run(_send())

    @staticmethod
    @click.command()
    @click.option('--limit', '-l', default=10, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–æ–≤')
    def dialogs(limit: int):
        """üí¨ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤"""

        async def _dialogs():
            from .main import app
            dialogs_list = await app.get_dialogs()

            if not dialogs_list:
                click.echo("üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∏–∞–ª–æ–≥–æ–≤")
                return

            click.echo(f"\nüí¨ –ù–∞–π–¥–µ–Ω–æ –¥–∏–∞–ª–æ–≥–æ–≤: {len(dialogs_list)}")
            click.echo("-" * 70)

            for i, dialog in enumerate(dialogs_list[:limit], 1):
                name = dialog.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')
                username = f"@{dialog['username']}" if dialog.get('username') else ""
                unread = dialog.get('unread_count', 0)
                last_msg = dialog.get('last_message', '')

                # –ò–∫–æ–Ω–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
                status_icon = "üî¥" if unread > 0 else "‚ö™"

                click.echo(f"{status_icon} {i}. {name} {username} (ID: {dialog['id']})")

                if unread > 0:
                    click.echo(f"     üì® –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread}")

                if last_msg:
                    click.echo(f"     üí≠ –ü–æ—Å–ª–µ–¥–Ω–µ–µ: {last_msg[:50]}...")

                click.echo()

        asyncio.run(_dialogs())

    @staticmethod
    @click.command()
    @click.option('--chat-id', '-c', type=int, help='ID —á–∞—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞')
    @click.option('--limit', '-l', default=20, help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π')
    def messages(chat_id: int, limit: int):
        """üìú –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞"""
        if not chat_id:
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å –ø–æ–¥—Å–∫–∞–∑–∫–æ–π
            chats = db_manager.get_active_chats()
            if not chats:
                click.echo("üì≠ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                return

            click.echo(f"\nüí¨ –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ({len(chats)}):")
            click.echo("-" * 70)

            for chat in chats[:15]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø 15
                name = chat.first_name or "–ë–µ–∑ –∏–º–µ–Ω–∏"
                username = f"@{chat.username}" if chat.username else ""

                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
                stats = db_manager.get_message_statistics(chat.id)
                total_msgs = stats['total_messages']

                # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–∫—Ç—ã –¥–ª—è –∫—Ä–∞—Ç–∫–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
                facts = db_manager.get_person_facts(chat.id)
                status_parts = []

                if any(f.fact_type == "job" for f in facts):
                    status_parts.append("üíº —Ä–∞–±–æ—Ç–∞")
                if any(f.fact_type == "financial_complaint" for f in facts):
                    status_parts.append("üí∞ –∂–∞–ª–æ–±—ã")
                if any(f.fact_type == "expensive_dream" for f in facts):
                    status_parts.append("‚ú® –º–µ—á—Ç—ã")

                status = " | ".join(status_parts) if status_parts else "–æ–±—ã—á–Ω–æ–µ –æ–±—â–µ–Ω–∏–µ"

                click.echo(f"   {chat.id}: {name} {username}")
                click.echo(f"        User ID: {chat.telegram_user_id} | {total_msgs} —Å–æ–æ–±—â–µ–Ω–∏–π")
                click.echo(f"        –°—Ç–∞—Ç—É—Å: {status}")
                click.echo()

            click.echo(f"üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: telegram-ai messages -c <chat_id>")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —á–∞—Ç–∞
        messages_list = db_manager.get_chat_messages(chat_id, limit)

        if not messages_list:
            click.echo(f"üì≠ –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ {chat_id}")
            return

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        chat = db_manager.get_chat_by_id(chat_id)
        chat_name = chat.first_name if chat else f"–ß–∞—Ç {chat_id}"

        click.echo(f"\nüí¨ –°–æ–æ–±—â–µ–Ω–∏—è: {chat_name} (–ø–æ—Å–ª–µ–¥–Ω–∏–µ {len(messages_list)}):")
        click.echo("-" * 70)

        for msg in messages_list:
            # –ò–∫–æ–Ω–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π
            sender_icon = "ü§ñ" if msg.is_from_ai else "üë§"
            sender_name = "–°—Ç–∞—Å" if msg.is_from_ai else chat_name

            # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
            time_str = msg.created_at.strftime("%d.%m %H:%M")

            # –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–±—Ä–µ–∑–∞–µ–º –µ—Å–ª–∏ –¥–ª–∏–Ω–Ω—ã–π)
            text = msg.text or ""
            if len(text) > 100:
                text = text[:100] + "..."

            click.echo(f"{time_str} {sender_icon} {sender_name}: {text}")


# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –∫–æ–º–∞–Ω–¥
chat_commands = ChatCommands()