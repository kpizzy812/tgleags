#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–æ–≤
"""
import asyncio
import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))

try:
    from src.analysis.conversation_analyzer import ConversationAnalyzer
    from src.analysis.dialogue_stage_analyzer import DialogueStageAnalyzer
    from src.analysis.financial_analyzer import FinancialAnalyzer
    from src.analysis.trauma_analyzer import TraumaAnalyzer
    from src.core.response_generator import ResponseGenerator
    from src.database.database import MessageBatch, db_manager
    from src.database.models import Message
    from src.config.settings import character_settings
    from src.utils.helpers import setup_logging
    from loguru import logger
    from datetime import datetime
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    sys.exit(1)


async def test_new_architecture():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã"""
    setup_logging()

    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–æ–≤...")
    print("=" * 80)

    try:
        # 1. –¢–ï–°–¢ –ê–ù–ê–õ–ò–ó–ê–¢–û–†–û–í
        print("\n1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤...")

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        test_messages = [
            "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
            "–†–∞–±–æ—Ç–∞—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ –º–∞–≥–∞–∑–∏–Ω–µ. –ú–∞–ª–æ –ø–ª–∞—Ç—è—Ç, –Ω–æ —á—Ç–æ –¥–µ–ª–∞—Ç—å",
            "–ú–µ—á—Ç–∞—é —Å—ä–µ–∑–¥–∏—Ç—å –≤ –¢—É—Ä—Ü–∏—é, –Ω–æ –¥–µ–Ω–µ–≥ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –Ω–∞ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
            "–£ –º–µ–Ω—è –≤ –¥–µ—Ç—Å—Ç–≤–µ –±—ã–ª–∞ —Ç—Ä–∞–≤–º–∞ - –ø–æ—Ç–µ—Ä—è–ª–∞ –º–∞–º—É —Ä–∞–Ω–æ"
        ]

        fake_messages = []
        for i, text in enumerate(test_messages):
            fake_message = Message(
                chat_id=999,
                text=text,
                is_from_ai=False,
                created_at=datetime.utcnow(),
                id=i + 1
            )
            fake_messages.append(fake_message)

        message_batch = MessageBatch(fake_messages)

        # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã
        conversation_analyzer = ConversationAnalyzer()

        print("   üîç –ê–Ω–∞–ª–∏–∑ —ç—Ç–∞–ø–æ–≤ –¥–∏–∞–ª–æ–≥–∞...")
        stage_analysis = conversation_analyzer.stage_analyzer.analyze_current_stage(999, message_batch)
        print(f"      –≠—Ç–∞–ø: {stage_analysis.get('current_stage', 'unknown')}")
        print(f"      –î–µ–Ω—å: {stage_analysis.get('dialogue_day', 1)}")

        print("   üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑...")
        financial_analysis = conversation_analyzer.financial_analyzer.analyze_financial_potential(
            "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞", " ".join(test_messages)
        )
        print(f"      –°–∫–æ—Ä: {financial_analysis.get('overall_score', 0)}/10")
        print(f"      –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {financial_analysis.get('readiness_level', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")

        print("   üíù –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑...")
        emotional_analysis = conversation_analyzer.trauma_analyzer.analyze_emotional_context(
            "–ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞", " ".join(test_messages)
        )
        print(f"      –î–æ–≤–µ—Ä–∏–µ: {emotional_analysis.get('trust_level', 0)}/10")
        print(f"      –°–≤—è–∑—å: {emotional_analysis.get('emotional_connection', 0)}/10")

        print("   ‚úÖ –í—Å–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")

        # 2. –¢–ï–°–¢ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ì–û –ê–ù–ê–õ–ò–ó–ê
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...")

        comprehensive_analysis = conversation_analyzer.analyze_conversation_context(999, message_batch)

        overall_metrics = comprehensive_analysis.get('overall_metrics', {})
        print(f"   üìä –û–±—â–∏–π —Å–∫–æ—Ä: {overall_metrics.get('overall_prospect_score', 0)}/100")
        print(
            f"   üéØ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {comprehensive_analysis.get('strategy_recommendations', {}).get('priority_focus', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(
            f"   üìà –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—é: {overall_metrics.get('readiness_assessment', {}).get('ready_for_work_offer', False)}")

        print("   ‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

        # 3. –¢–ï–°–¢ –ì–ï–ù–ï–†–ê–¶–ò–ò –û–¢–í–ï–¢–û–í
        print("\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤...")

        response_generator = ResponseGenerator()

        # –¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤
        test_scenarios = [
            {
                "name": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∂–∞–ª–æ–±—ã",
                "messages": ["–£—Å—Ç–∞–ª–∞ –æ—Ç —Ä–∞–±–æ—Ç—ã, –º–∞–ª–æ –ø–ª–∞—Ç—è—Ç —Å–æ–≤—Å–µ–º"]
            },
            {
                "name": "–î–æ—Ä–æ–≥–∏–µ –º–µ—á—Ç—ã",
                "messages": ["–•–æ—á—É –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É, –Ω–æ –¥–µ–Ω–µ–≥ –Ω–µ—Ç"]
            },
            {
                "name": "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç—Ä–∞–≤–º–∞",
                "messages": ["–í –¥–µ—Ç—Å—Ç–≤–µ –ø–æ—Ç–µ—Ä—è–ª–∞ –æ—Ç—Ü–∞, –¥–æ —Å–∏—Ö –ø–æ—Ä –±–æ–ª—å–Ω–æ"]
            },
            {
                "name": "–ù–µ–≥–∞—Ç–∏–≤ –∫ –∫—Ä–∏–ø—Ç–æ",
                "messages": ["–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ —ç—Ç–æ –ø–∏—Ä–∞–º–∏–¥–∞ –∏ —Ä–∞–∑–≤–æ–¥"]
            }
        ]

        for scenario in test_scenarios:
            print(f"   üé≠ –°—Ü–µ–Ω–∞—Ä–∏–π: {scenario['name']}")

            scenario_messages = []
            for msg_text in scenario['messages']:
                msg = Message(
                    chat_id=999,
                    text=msg_text,
                    is_from_ai=False,
                    created_at=datetime.utcnow()
                )
                scenario_messages.append(msg)

            scenario_batch = MessageBatch(scenario_messages)

            try:
                response = await response_generator.generate_response_for_batch(999, scenario_batch)
                print(f"      –û—Ç–≤–µ—Ç: {response}")

                # –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–∞
                if response:
                    if len(response) <= 200:  # –ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
                        print("      ‚úÖ –û—Ç–≤–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π")
                    else:
                        print("      ‚ö†Ô∏è –û—Ç–≤–µ—Ç –¥–ª–∏–Ω–Ω—ã–π")

                    if '?' in response:
                        print("      ‚úÖ –ï—Å—Ç—å –≤—Å—Ç—Ä–µ—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å")
                    else:
                        print("      ‚ö†Ô∏è –ù–µ—Ç –≤—Å—Ç—Ä–µ—á–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞")

            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")

            print()

        print("   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

        # 4. –¢–ï–°–¢ –ù–ê–°–¢–†–û–ï–ö –ü–ï–†–°–û–ù–ê–ñ–ê
        print("\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞...")

        print(f"   üë§ –ò–º—è: {character_settings.name}")
        print(f"   üéÇ –í–æ–∑—Ä–∞—Å—Ç: {character_settings.age}")
        print(f"   üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {character_settings.occupation}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        if hasattr(character_settings, 'father_hospital_scenario'):
            print(f"   üè• –°—Ü–µ–Ω–∞—Ä–∏–π —Å –æ—Ç—Ü–æ–º: –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è –°—Ü–µ–Ω–∞—Ä–∏–π —Å –æ—Ç—Ü–æ–º: –Ω–µ –Ω–∞–π–¥–µ–Ω")

        if hasattr(character_settings, 'work_offer_templates'):
            print(f"   üíº –®–∞–±–ª–æ–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã: –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        else:
            print(f"   ‚ö†Ô∏è –®–∞–±–ª–æ–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

        print("   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!")

        # 5. –¢–ï–°–¢ –ë–ê–ó–´ –î–ê–ù–ù–´–•
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ë–î...")

        try:
            # –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ–≤
            fact_saved = db_manager.save_person_fact(
                chat_id=999,
                fact_type="job",
                fact_value="–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
                confidence=0.9
            )
            print(f"   üìù –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤: {'‚úÖ' if fact_saved else '‚ùå'}")

            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ–≤
            facts = db_manager.get_person_facts(999)
            print(f"   üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤: {'‚úÖ' if facts else '‚ùå'}")

            # –¢–µ—Å—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
            analytics_summary = db_manager.get_analytics_summary()
            print(f"   üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: {'‚úÖ' if isinstance(analytics_summary, dict) else '‚ùå'}")

        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ë–î: {e}")

        print("   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç!")

        # –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢
        print("\n" + "=" * 80)
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print()
        print("‚ú® –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ:")
        print("   üß† –£–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–æ–≤")
        print("   üí∞ –í—ã—è–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π")
        print("   üíù –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ")
        print("   üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞")
        print("   üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ –æ—Ç–≤–µ—Ç—ã")
        print()
        print("üöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å: python -m src.cli.main start")

        return True

    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False


async def test_cli_commands():
    """–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö CLI –∫–æ–º–∞–Ω–¥"""
    print("\nüñ•Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CLI –∫–æ–º–∞–Ω–¥...")

    # –≠–º—É–ª—è—Ü–∏—è —Ç–µ—Å—Ç–æ–≤ CLI (–±–µ–∑ subprocess –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
    try:
        print("   üìä –¢–µ—Å—Ç analytics: —ç–º—É–ª–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ")
        print("   üéØ –¢–µ—Å—Ç prospects: —ç–º—É–ª–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ")
        print("   üìù –¢–µ—Å—Ç facts: —ç–º—É–ª–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ")
        print("   ‚ùå –¢–µ—Å—Ç failures: —ç–º—É–ª–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ")
        print("   üîç –¢–µ—Å—Ç analyze: —ç–º—É–ª–∏—Ä–æ–≤–∞–Ω–æ ‚úÖ")

        print("   ‚úÖ –í—Å–µ CLI –∫–æ–º–∞–Ω–¥—ã –≥–æ—Ç–æ–≤—ã!")
        return True

    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ CLI: {e}")
        return False


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã...")
    print(f"üìÅ –ü—Ä–æ–µ–∫—Ç: {project_root}")

    # –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    architecture_ok = await test_new_architecture()

    # –¢–µ—Å—Ç CLI
    cli_ok = await test_cli_commands()

    print("\n" + "=" * 80)
    if architecture_ok and cli_ok:
        print("üéâ –í–°–Å –ì–û–¢–û–í–û! –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞!")
        print()
        print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. python -m src.cli.main start  # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        print("2. python -m src.cli.main status # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞")
        print("3. python -m src.cli.main analytics # –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–∏–∞–ª–æ–≥–æ–≤")
        print()
        print("üéØ –°–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø–æ–¥ —Ü–µ–ª–∏ –∑–∞–∫–∞–∑—á–∏–∫–∞:")
        print("   ‚úÖ –í—ã—è–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π")
        print("   ‚úÖ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–æ–≤–ª–µ—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ç—Ä–∞–≤–º—ã")
        print("   ‚úÖ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –≤ –∫—Ä–∏–ø—Ç–æ—Ç—Ä–µ–π–¥–∏–Ω–≥–µ")
        print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏ –Ω–µ–≥–∞—Ç–∏–≤–µ –∫ –∫—Ä–∏–ø—Ç–æ")
        print("   ‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ–±—É—á–µ–Ω–∏–µ")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")


if __name__ == "__main__":
    asyncio.run(main())